(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Alterna entre dos clases a un elemento
 * @param {string} target - Id del elemento que se alternarÃ¡ las clases
 * @param {string} lightTheme - Clase css para tema claro
 * @param {string} darkTheme - Clase css para tema oscuro
 */
// const alternateTheme = (target, lightTheme, darkTheme) => {
//     const t = document.getElementById(target);
//     if (!t) return
//     if (t.classList.contains(lightTheme)) {
//         t.classList.remove(lightTheme)
//         t.classList.add(darkTheme)
//     } else {
//         t.classList.remove(darkTheme)
//         t.classList.add(lightTheme)
//     }
// }
const alternateTheme = (target, toggleClass) => {
  const t = document.getElementById(target);
  if (!t) return;
  t.classList.toggle(toggleClass);
};

var _default = alternateTheme;
exports.default = _default;

},{}],2:[function(require,module,exports){
"use strict";

var _module = _interopRequireDefault(require("./modules/module"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// const { default: alternateTheme } = require('./modules/module')
const toggleTheme = document.getElementById('toggle-theme');
toggleTheme.addEventListener('click', () => {
  // alternateTheme('alternate-theme', 'light-theme', 'dark-theme')
  (0, _module.default)('alternate-theme', 'light-theme');
  (0, _module.default)('toggle-theme', 'toggle-theme__switch--active');
});

},{"./modules/module":1}]},{},[2]);
